name: build
on:
  push:
    branches:
    - master
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            runtime-identifier: win-x64
            dotnet-version: 3.1.301
            version-suffix: gha-win-x64-${{ github.run_number }}
          - os: macos-latest
            runtime-identifier: osx-x64
            dotnet-version: 3.1.301
            version-suffix: gha-osx-x64-${{ github.run_number }}
          - os: ubuntu-latest
            runtime-identifier: linux-x64
            dotnet-version: 3.1.301
            version-suffix: gha-linux-x64-${{ github.run_number }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - shell: bash
      env:
        N: ${{ github.run_number }}
        R: ${{ matrix.runtime-identifier }}
        S: ${{ matrix.version-suffix }}
      run: |
        cat <<EOF > src/FataMorgana/Program.Injection.cs
        #nullable enable

        namespace AcidChicken.FataMorgana
        {
            partial class Program
            {
                const long RunNumber = $N;
            }
        }
        EOF
        if $(dotnet publish -r "$R" -c Release -o dist --version-suffix "$S")
          then
            :
          else
            touch .no-rtr
            dotnet publish -r "$R" -c Release -o dist --version-suffix "$S"
        fi
    - shell: powershell
      if: matrix.os == 'windows-latest'
      env:
        P: ${{ secrets.P }}
      run: |
        Install-Module -Force 7Zip4PowerShell
        Compress-7Zip -ArchiveFileName dist.zip -Path dist -Password "$P" -FlattenDirectoryStructure
    - shell: bash
      if: matrix.os != 'windows-latest'
      env:
        P: ${{ secrets.P }}
      run: |
        zip -rP "$P" dist.zip dist
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.version-suffix }}
        path: dist.zip
